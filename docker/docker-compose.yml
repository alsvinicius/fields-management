version: '2'

services:
  consumer:
    image: 'alsvinicius/clients-fields-consumer'
    ports:
      - '21000:20000'
    volumes:
      - 'consumer_data/alsvinicius'
    logging:
      driver: json-file
    networks:
      clients-fields-network:
          ipv4_address: 192.168.200.60
  front:
    image: 'alsvinicius/fields-front-end'
    ports:
      - '3001:80'
    logging:
      driver: json-file
    networks:
      clients-fields-network:
          ipv4_address: 192.168.200.50
  zookeeper:
    image: 'bitnami/zookeeper:3'
    ports:
      - '2181:2181'
    volumes:
      - 'zookeeper_data:/alsvinicius'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      clients-fields-network:
          ipv4_address: 192.168.200.40
  kafka:
    image: 'bitnami/kafka:2'
    ports:
      - '9092:9092'
    volumes:
      - 'kafka_data:/alsvinicius'
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=192.168.200.40:2181
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://192.168.200.30:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    networks:
      clients-fields-network:
          ipv4_address: 192.168.200.30
  mongo:
    image: mongo
    ports:
      - '27017:27017'
    volumes:
      - 'mongo_data/alsvinicius'
    networks:
      clients-fields-network:
        ipv4_address: 192.168.200.20
  api:
    image: 'alsvinicius/clients-fields-api'
    ports:
      - '11000:10000'
    volumes:
      - 'api_data/alsvinicius'
    logging:
      driver: json-file
    networks:
      clients-fields-network:
          ipv4_address: 192.168.200.10

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
  mongo_data:
    driver: local
  api_data:
    driver: local
  front_data:
    driver: local
  consumer_data:
    driver: local
    
networks:
  clients-fields-network:
    driver: bridge
    ipam:
     config:
       - subnet: 192.168.200.0/16
         gateway: 192.168.200.1